{*******************************************************}
{* 
{* uTCliente.pas
{* Delphi Implementation of the Class TCliente
{* Generated by Enterprise Architect
{* Created on:      16-dez-2014 14:29:27
{* Original author: PROGRAMACAO
{*  
{*******************************************************}

unit Modelo.Entidade.Cliente.TCliente;

interface

uses  Modelo.Entidade.Documento.TDocumento, Modelo.Entidade.Endereco.TEndereco,
  Modelo.Entidade.Telefone.TTelefone;

type

  AcimaLimiteCreditoEnum = (PERMITIRVENDA, BLOQUEARVENDA, EXIBIRMENSAGEM, SOLICITARADM);

  TClienteEntidade = class
  private
    FCodigo       : Integer;
    FRazaoSocial  : String;
    FNomeFantasia : String;
    FDocumento    : TDocumento;
    FEndereco     : TEndereco;
    FTelefone     : TTelefone;
    FCPFCNPJ      : String;
    FEnderecoTexto: String;
    FCredito       : double;
    FLimiteCredito : double;
    FAcimaLimiteCredito: AcimaLimiteCreditoEnum;
    procedure SetCodigo(const Value: Integer);
    procedure SetCPFCNPJ(const Value: String);
    procedure SetNomeFantasia(const Value: String);
    procedure SetRazaoSocial(const Value: String);
    procedure SetEnderecoTexto(const Value: String);
    procedure SetAcimaLimiteCredito(const Value: AcimaLimiteCreditoEnum);
    procedure SetCredito(const Value: double);
    procedure SetLimiteCredito(const Value: double);
  public

    constructor Create; overload;
    destructor Destroy; override;
    property Codigo       : Integer read FCodigo write SetCodigo;
    property RazaoSocial  : String read FRazaoSocial write SetRazaoSocial;
    property NomeFantasia : String read FNomeFantasia write SetNomeFantasia;
    property Documento    : TDocumento read FDocumento;
    property Endereco     : TEndereco read FEndereco;
    property Telefone     : TTelefone read FTelefone;
    property CPFCNPJ : String read FCPFCNPJ write SetCPFCNPJ;
    property EnderecoTexto: String read FEnderecoTexto write SetEnderecoTexto;
    property Credito       : double read FCredito write SetCredito;
    property LimiteCredito : double read FLimiteCredito write SetLimiteCredito;
    property AcimaLimiteCredito: AcimaLimiteCreditoEnum read FAcimaLimiteCredito write SetAcimaLimiteCredito;

  end;

implementation

uses
  SysUtils;

{implementation of TCliente}

constructor TClienteEntidade.Create;
begin
  inherited Create;
  FDocumento := TDocumento.Create;
  FEndereco := TEndereco.Create;
  FTelefone := TTelefone.Create;
end;

destructor TClienteEntidade.Destroy;
begin
  FreeAndNil(FDocumento);
  FreeAndNil(FEndereco);
  FreeAndNil(FTelefone);
  inherited Destroy;
end;

procedure TClienteEntidade.SetAcimaLimiteCredito(const Value: AcimaLimiteCreditoEnum);
begin
  FAcimaLimiteCredito := Value;
end;

procedure TClienteEntidade.SetCodigo(const Value: Integer);
begin
  FCodigo := Value;
end;

procedure TClienteEntidade.SetCPFCNPJ(const Value: String);
begin
  FCPFCNPJ := Value;
end;

procedure TClienteEntidade.SetCredito(const Value: double);
begin
  FCredito := Value;
end;

procedure TClienteEntidade.SetEnderecoTexto(const Value: String);
begin
  FEnderecoTexto := Value;
end;

procedure TClienteEntidade.SetLimiteCredito(const Value: double);
begin
  FLimiteCredito := Value;
end;

procedure TClienteEntidade.SetNomeFantasia(const Value: String);
begin
  FNomeFantasia := Value;
end;

procedure TClienteEntidade.SetRazaoSocial(const Value: String);
begin
  FRazaoSocial := Value;
end;

end.
