{*******************************************************}
{* 
{* uTNotaFiscalItem.pas
{* Delphi Implementation of the Class TNotaFiscalItem
{* Generated by Enterprise Architect
{* Created on:      16-dez-2014 14:29:13
{* Original author: PROGRAMACAO
{*  
{*******************************************************}

unit Modelo.Entidade.NFE.TNotaFiscalItem;

interface

uses
  Modelo.Entidade.NFe.TNotaFiscalTotais,
  Modelo.Entidade.Tributacao.TTributacaoEntidade,
  Modelo.Entidade.NaturezaOperacao.TNaturezaOperacao,
  Modelo.Entidade.Produto.TProduto;

type

  TNotaFiscalItem = class
  private
    FCodigo           : Integer;
    FNotaFiscalCodigo : Integer;
    FProduto          : TProdutoEntidade;
    FQuantidade       : Double;
    FValorUnitario    : Double;
    FPrecoVendaVista  : Double;
    FPrecoVendaPrazo  : Double;
    FTributacao       : TTributacaoEntidade;
    FNaturezaOperacao : TNaturezaOperacao;
    FNotaFiscalTotais : TNotaFiscalTotais;
    procedure SetCodigo(const Value: Integer);
    procedure SetNaturezaOperacao(const Value: TNaturezaOperacao);
    procedure SetNotaFiscalCodigo(const Value: Integer);
    procedure SetProduto(const Value: TProdutoEntidade);
    procedure SetTributacao(const Value: TTributacaoEntidade);
    procedure SetQuantidade(const Value: Double);
    procedure SetValorUnitario(const Value: Double);
    procedure SetPrecoVendaPrazo(const Value: Double);
    procedure SetPrecoVendaVista(const Value: Double);
  public
    constructor Create; overload;
    destructor Destroy; override;
    property Codigo           : Integer read FCodigo write SetCodigo;
    property NotaFiscalCodigo : Integer read FNotaFiscalCodigo write SetNotaFiscalCodigo;
    property Produto          : TProdutoEntidade read FProduto write SetProduto;
    property Tributacao       : TTributacaoEntidade read FTributacao write SetTributacao;
    property NaturezaOperacao : TNaturezaOperacao read FNaturezaOperacao write SetNaturezaOperacao;
    property NotaFiscalTotais : TNotaFiscalTotais read FNotaFiscalTotais;
    property Quantidade       : Double read FQuantidade write SetQuantidade;
    property ValorUnitario    : Double read FValorUnitario write SetValorUnitario;
    property PrecoVendaVista  : Double read FPrecoVendaVista write SetPrecoVendaVista;
    property PrecoVendaPrazo  : Double read FPrecoVendaPrazo write SetPrecoVendaPrazo;
  end;

implementation

uses
  SysUtils;

{implementation of TNotaFiscalItem}

constructor TNotaFiscalItem.Create;
begin
  inherited Create;
  FNotaFiscalTotais := TNotaFiscalTotais.Create;
  FTributacao       := TTributacaoEntidade.Create;
  FNaturezaOperacao := TNaturezaOperacao.Create;
end;

destructor TNotaFiscalItem.Destroy;
begin
  FreeAndNil(FNotaFiscalTotais);
  FreeAndNil(FTributacao);
  FreeAndNil(FNaturezaOperacao);
  inherited Destroy;
end;

procedure TNotaFiscalItem.SetCodigo(const Value: Integer);
begin
  FCodigo := Value;
end;

procedure TNotaFiscalItem.SetNaturezaOperacao(const Value: TNaturezaOperacao);
begin
  FNaturezaOperacao := Value;
end;

procedure TNotaFiscalItem.SetNotaFiscalCodigo(const Value: Integer);
begin
  FNotaFiscalCodigo := Value;
end;

procedure TNotaFiscalItem.SetPrecoVendaPrazo(const Value: Double);
begin
  FPrecoVendaPrazo := Value;
end;

procedure TNotaFiscalItem.SetPrecoVendaVista(const Value: Double);
begin
  FPrecoVendaVista := Value;
end;

procedure TNotaFiscalItem.SetProduto(const Value: TProdutoEntidade);
begin
  FProduto := Value;
end;

procedure TNotaFiscalItem.SetQuantidade(const Value: Double);
begin
  FQuantidade := Value;
end;

procedure TNotaFiscalItem.SetTributacao(const Value: TTributacaoEntidade);
begin
  FTributacao := Value;
end;

procedure TNotaFiscalItem.SetValorUnitario(const Value: Double);
begin
  FValorUnitario := Value;
end;

end.