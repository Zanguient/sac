{*******************************************************}
{* 
{* uTNotaFiscalTransportadora.pas
{* Delphi Implementation of the Class TNotaFiscalTransportadora
{* Generated by Enterprise Architect
{* Created on:      16-dez-2014 14:29:10
{* Original author: PROGRAMACAO
{*  
{*******************************************************}

unit Modelo.Entidade.NFE.TNotaFiscalTransportadora;

interface

uses
  Modelo.Entidade.Endereco.TCidade;

type

  TTipoFrete = (SEMFRETE, EMITENTE, DESTINATARIO);

  TNotaFiscalTransportadora = class
  private
    FCodigo             : Integer;
    FNotaFiscalCodigo   : Integer;
    FTipo               : TTipoFrete;
    FCodigoANTT         : Integer;
    FPlacaVeiculo       : String;
    FUF                 : String;
    FCNPJ               : String;
    FLogradouro         : string;
    FNumEndereco        : String;
    FBairro             : String;
    FCidade             : TCidade;
    FInscricaoEstadual  : String;
    FQuantidade         : Double;
    FMarca              : String;
    FEspecie            : String;
    FNumeracao          : String;
    FPesoBruto          : Double;
    FPesoLiquido        : Double;

    procedure SetBairro(const Value: String);
    procedure SetCNPJ(const Value: String);
    procedure SetCodigo(const Value: Integer);
    procedure SetCodigoANTT(const Value: Integer);
    procedure SetEspecie(const Value: String);
    procedure SetInscricaoEstadual(const Value: String);
    procedure SetLogradouro(const Value: string);
    procedure SetMarca(const Value: String);
    procedure SetNotaFiscalCodigo(const Value: Integer);
    procedure SetNumEndereco(const Value: String);
    procedure SetNumeracao(const Value: String);
    procedure SetPesoBruto(const Value: Double);
    procedure SetPesoLiquido(const Value: Double);
    procedure SetPlacaVeiculo(const Value: String);
    procedure SetQuantidade(const Value: Double);
    procedure SetTipo(const Value: TTipoFrete);
    procedure SetUF(const Value: String);

  public
    constructor Create; overload;
    destructor Destroy; override;
    property Codigo             : Integer read FCodigo write SetCodigo;
    property NotaFiscalCodigo   : Integer read FNotaFiscalCodigo write SetNotaFiscalCodigo;
    property Tipo               : TTipoFrete read FTipo write SetTipo;
    property CodigoANTT         : Integer read FCodigoANTT write SetCodigoANTT;
    property PlacaVeiculo       : String read FPlacaVeiculo write SetPlacaVeiculo;
    property UF                 : String read FUF write SetUF;
    property CNPJ               : String read FCNPJ write SetCNPJ;
    property Logradouro         : string read FLogradouro write SetLogradouro;
    property NumEndereco        : String read FNumEndereco write SetNumEndereco;
    property Bairro             : String read FBairro write SetBairro;
    property Cidade             : TCidade read FCidade;
    property InscricaoEstadual  : String read FInscricaoEstadual write SetInscricaoEstadual;
    property Quantidade         : Double read FQuantidade write SetQuantidade;
    property Marca              : String read FMarca write SetMarca;
    property Especie            : String read FEspecie write SetEspecie;
    property Numeracao          : String read FNumeracao write SetNumeracao;
    property PesoBruto          : Double read FPesoBruto write SetPesoBruto;
    property PesoLiquido        : Double read FPesoLiquido write SetPesoLiquido;
  end;

implementation

uses
  SysUtils;

{implementation of TNotaFiscalTransportadora}

constructor TNotaFiscalTransportadora.Create;
begin
  inherited Create;
  FCidade := TCidade.Create;
end;

destructor TNotaFiscalTransportadora.Destroy;
begin
  FreeAndNil(FCidade);
  inherited Destroy;
end;

procedure TNotaFiscalTransportadora.SetBairro(const Value: String);
begin
  FBairro := Value;
end;

procedure TNotaFiscalTransportadora.SetCNPJ(const Value: String);
begin
  FCNPJ := Value;
end;

procedure TNotaFiscalTransportadora.SetCodigo(const Value: Integer);
begin
  FCodigo := Value;
end;

procedure TNotaFiscalTransportadora.SetCodigoANTT(const Value: Integer);
begin
  FCodigoANTT := Value;
end;

procedure TNotaFiscalTransportadora.SetEspecie(const Value: String);
begin
  FEspecie := Value;
end;

procedure TNotaFiscalTransportadora.SetInscricaoEstadual(const Value: String);
begin
  FInscricaoEstadual := Value;
end;

procedure TNotaFiscalTransportadora.SetLogradouro(const Value: string);
begin
  FLogradouro := Value;
end;

procedure TNotaFiscalTransportadora.SetMarca(const Value: String);
begin
  FMarca := Value;
end;

procedure TNotaFiscalTransportadora.SetNotaFiscalCodigo(const Value: Integer);
begin
  FNotaFiscalCodigo := Value;
end;

procedure TNotaFiscalTransportadora.SetNumEndereco(const Value: String);
begin
  FNumEndereco := Value;
end;

procedure TNotaFiscalTransportadora.SetNumeracao(const Value: String);
begin
  FNumeracao := Value;
end;

procedure TNotaFiscalTransportadora.SetPesoBruto(const Value: Double);
begin
  FPesoBruto := Value;
end;

procedure TNotaFiscalTransportadora.SetPesoLiquido(const Value: Double);
begin
  FPesoLiquido := Value;
end;

procedure TNotaFiscalTransportadora.SetPlacaVeiculo(const Value: String);
begin
  FPlacaVeiculo := Value;
end;

procedure TNotaFiscalTransportadora.SetQuantidade(const Value: Double);
begin
  FQuantidade := Value;
end;

procedure TNotaFiscalTransportadora.SetTipo(const Value: TTipoFrete);
begin
  FTipo := Value;
end;

procedure TNotaFiscalTransportadora.SetUF(const Value: String);
begin
  FUF := Value;
end;

end.