{*******************************************************}
{* 
{* uTNotaFiscalTotais.pas
{* Delphi Implementation of the Class TNotaFiscalTotais
{* Generated by Enterprise Architect
{* Created on:      16-dez-2014 14:28:46
{* Original author: PROGRAMACAO
{*  
{*******************************************************}

unit Modelo.Entidade.NFE.TNotaFiscalTotais;

interface

type

  TNotaFiscalTotais = class
  private
    FBaseCalculo      : Double;
    FBaseCalculoST    : Double;
    FValorICMS        : Double;
    FValorICMSST      : Double;
    FIPI              : Double;
    FCOFINS           : Double;
    FPIS              : Integer;
    FFrete            : Double;
    FSeguro           : Double;
    FOutras           : Double;
    FDesconto         : Double;
    FTotalProdutos    : Double;
    FTotalNotaFiscal  : Double;
    FAcrescimo        : Double;
    procedure SetAcrescimo(const Value: Double);
    procedure SetBaseCalculo(const Value: Double);
    procedure SetBaseCalculoST(const Value: Double);
    procedure SetCOFINS(const Value: Double);
    procedure SetDesconto(const Value: Double);
    procedure SetFrete(const Value: Double);
    procedure SetIPI(const Value: Double);
    procedure SetOutras(const Value: Double);
    procedure SetPIS(const Value: Integer);
    procedure SetSeguro(const Value: Double);
    procedure SetTotalNotaFiscal(const Value: Double);
    procedure SetTotalProdutos(const Value: Double);
    procedure SetValorICMS(const Value: Double);
    procedure SetValorICMSST(const Value: Double);
  public
    constructor Create; overload;
    destructor Destroy; override;

    property BaseCalculo      : Double read FBaseCalculo write SetBaseCalculo;
    property BaseCalculoST    : Double read FBaseCalculoST write SetBaseCalculoST;
    property ValorICMS        : Double read FValorICMS write SetValorICMS;
    property ValorICMSST      : Double read FValorICMSST write SetValorICMSST;
    property IPI              : Double read FIPI write SetIPI;
    property COFINS           : Double read FCOFINS write SetCOFINS;
    property PIS              : Integer read FPIS write SetPIS;
    property Frete            : Double read FFrete write SetFrete;
    property Seguro           : Double read FSeguro write SetSeguro;
    property Outras           : Double read FOutras write SetOutras;
    property Desconto         : Double read FDesconto write SetDesconto;
    property TotalProdutos    : Double read FTotalProdutos write SetTotalProdutos;
    property TotalNotaFiscal  : Double read FTotalNotaFiscal write SetTotalNotaFiscal;
    property Acrescimo        : Double read FAcrescimo write SetAcrescimo;

  end;

implementation



{implementation of TNotaFiscalTotais}

constructor TNotaFiscalTotais.Create;
begin
  inherited Create;
end;

destructor TNotaFiscalTotais.Destroy;
begin
  inherited Destroy;
end;

procedure TNotaFiscalTotais.SetAcrescimo(const Value: Double);
begin
  FAcrescimo := Value;
end;

procedure TNotaFiscalTotais.SetBaseCalculo(const Value: Double);
begin
  FBaseCalculo := Value;
end;

procedure TNotaFiscalTotais.SetBaseCalculoST(const Value: Double);
begin
  FBaseCalculoST := Value;
end;

procedure TNotaFiscalTotais.SetCOFINS(const Value: Double);
begin
  FCOFINS := Value;
end;

procedure TNotaFiscalTotais.SetDesconto(const Value: Double);
begin
  FDesconto := Value;
end;

procedure TNotaFiscalTotais.SetFrete(const Value: Double);
begin
  FFrete := Value;
end;

procedure TNotaFiscalTotais.SetIPI(const Value: Double);
begin
  FIPI := Value;
end;

procedure TNotaFiscalTotais.SetOutras(const Value: Double);
begin
  FOutras := Value;
end;

procedure TNotaFiscalTotais.SetPIS(const Value: Integer);
begin
  FPIS := Value;
end;

procedure TNotaFiscalTotais.SetSeguro(const Value: Double);
begin
  FSeguro := Value;
end;

procedure TNotaFiscalTotais.SetTotalNotaFiscal(const Value: Double);
begin
  FTotalNotaFiscal := Value;
end;

procedure TNotaFiscalTotais.SetTotalProdutos(const Value: Double);
begin
  FTotalProdutos := Value;
end;

procedure TNotaFiscalTotais.SetValorICMS(const Value: Double);
begin
  FValorICMS := Value;
end;

procedure TNotaFiscalTotais.SetValorICMSST(const Value: Double);
begin
  FValorICMSST := Value;
end;

end.